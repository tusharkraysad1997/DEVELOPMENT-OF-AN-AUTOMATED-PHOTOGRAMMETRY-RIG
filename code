#include <Stepper.h>
//const int stepsPerRevolution = 200;
// change this to fit the number of steps per revolution // for your motor
const int stepsPerRevolution1 = 25;
const int stepsPerRevolution2 = 200;
//const int stepsPerRevolution3 = 200;
//const int stepsPerRevolution = 200;
// initialize the stepper library on pins 8 through 11: Stepper myStepper(stepsPerRevolution1, 8, 9, 10, 11); Stepper myStepper2(stepsPerRevolution2, 4, 5, 6, 7); void setup()
{
// set the speed at 60 rpm:
myStepper.setSpeed(100); myStepper2.setSpeed(100);
// initialize the serial port:
Serial.begin(9600); }
void loop() {
take360pic(); //myStepper2.step(-stepsPerRevolution2);
ringmotor(); ringmotor(); ringmotor(); ringmotor(); delay(500); take360pic();
//myStepper2.step(-stepsPerRevolution2); ringmotor();
ringmotor();
ringmotor();
ringmotor(); delay(500); take360pic();
// myStepper2.step(-stepsPerRevolution2); ringmotor();
ringmotor();
ringmotor();
ringmotor(); delay(500); take360pic();
// myStepper2.step(-stepsPerRevolution2); ringmotor1();
ringmotor1();
ringmotor1(); ringmotor1(); ringmotor1(); ringmotor1(); ringmotor1(); ringmotor1(); ringmotor1(); ringmotor1(); ringmotor1(); ringmotor1();
// delay(8000); // ringmotor1(); //delay(2000);
// take360pic();
// myStepper2.step(-stepsPerRevolution2); // ringmotor();
/// delay(2000);
// take360pic();
// myStepper2.step(-stepsPerRevolution2); // ringmotor();
// delay(2000);
// take360pic();
// myStepper2.step(stepsPerRevolution3);
//delay(6000);
// step one revolution in one direction: //Serial.println("clockwise"); //myStepper.step(stepsPerRevolution); //delay(500);
// step one revolution in the other direction:
// Serial.println("counterclockwise"); //myStepper.step(-stepsPerRevolution); //delay(500);
}
void take360pic() // the process I made to take pictures
{ myStepper.step(stepsPerRevolution1); delay(1000); myStepper.step(stepsPerRevolution1); delay(1000); myStepper.step(stepsPerRevolution1); delay(1000); myStepper.step(stepsPerRevolution1); delay(1000); myStepper.step(stepsPerRevolution1); delay(1000); myStepper.step(stepsPerRevolution1); delay(1000); myStepper.step(stepsPerRevolution1); delay(1000); myStepper.step(stepsPerRevolution1); delay(1000);
}
void ringmotor() {
myStepper2.step(-stepsPerRevolution2); // delay(2000);
// myStepper2.step(-stepsPerRevolution2); //delay(5000);
// myStepper2.step(-stepsPerRevolution2); //delay(5000); //myStepper2.step(-stepsPerRevolution2);
// delay(5000); }
void ringmotor1() {
myStepper2.step(stepsPerRevolution2); //delay(8000);
//myStepper2.step(stepsPerRevolution2); //delay(2000);
// myStepper2.step(stepsPerRevolution2); //delay(2000);
//myStepper2.step(stepsPerRevolution2);
//delay(2000); }
